module CommonSpec
( spec
)
where

import qualified Data.ByteString.Lazy as BS (empty, pack)
import Test.Hspec

import qualified Common as C

spec :: Spec
spec = do
  describe "padToN" $ do
    it "should pad list to 5 bytes" $ do
      let l = [1,2,3]
      C.padToN 5 l `shouldBe` (2, [1,2,3,0,0])

  describe "int / word8 list conversions" $ do
    it "should convert ints to lists" $ do
      C.intToWord8List 0 [] `shouldBe` []
      C.intToWord8List 42310 [] `shouldBe` [165,70]
      C.intToWord8List 52582001236900766738172 [] `shouldBe`
        [11,34,121,219,13,148,44,170,230,252]

    it "should convert lists to ints" $ do
      C.word8ListToInt [0] `shouldBe` 0
      C.word8ListToInt [165,70] `shouldBe` 42310
      C.word8ListToInt [11,34,121,219,13,148,44,170,230,252] `shouldBe`
        52582001236900766738172

  {-describe "xor functions" $ do
    it "should xor list with byte" $ do
      C.xorByte [71,16,100,88,244,191,244,25] (6::Word8) `shouldBe`
        [65,22,98,94,242,185,242,31]
    it "should xor two lists" $ do
      C.xorList ([70,177,154,58,57,223]::[Word8]) [30,58,116,27,250,24] `shouldBe`
        [88,139,238,33,195,199]
    it "should xor two matrices" $ do
      C.xorMatrix [[22,118,122,58],[160,30,17,13],[86,147,22,179],[35,78,200,31]]
       ([[63,86,38,102],[0,100,194,13],[153,99,251,199],[211,225,25,61]]::[[Word8]])
       `shouldBe`
       [[41,32,92,92],[160,122,211,0],[207,240,237,116],[240,175,209,34]]-}

  describe "flatListToMatrix" $ do
    it "should transform the list to a matrix" $ do
      C.flatListToMatrix 4 ([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]::[Int]) []
        `shouldBe` [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]]
  
  describe "int / bytestring conversions" $ do
    it "should convert <= 255 byte int to byte string" $ do
      C.intToByteString 3930200501 `shouldBe` BS.pack [0,4,234,66,25,181]

    it "should convert > 255 byte int to byte string" $ do
      C.intToByteString 21861604245080171339007767436273251028962675737238600489562652570616452792171930243261538449270383829845213171438714534790402839949560242485827421338373225036542992214463891190748802611892723299134012757551872627490432599512695139570153104272243295483513740570680461640853477921139221080721470252809127558405874178316829038001976496050707242137419448698418190880376376357898762150901525314016508387807080297522276641333807090993741281833075321014369496188452228019592574472418790384827875190961329551033425345205568270076685303817873907426792398472173576937707798747379596999764222890564228862688418184435231463924293 `shouldBe` BS.pack [1,0,173,45,97,41,162,87,64,67,167,161,160,56,95,3,170,70,97,8,202,198,164,171,66,17,113,15,8,67,254,13,44,250,246,121,107,172,64,50,163,225,39,47,108,37,119,237,120,234,40,193,118,234,35,70,216,57,120,47,126,177,54,219,157,103,89,243,26,72,27,237,175,88,20,62,18,22,41,205,63,116,118,190,248,230,199,69,6,162,85,168,218,177,56,64,210,243,51,36,141,27,7,208,19,108,62,57,7,79,255,136,3,42,9,84,130,77,101,83,125,164,208,57,139,159,206,88,185,76,93,139,247,0,12,167,238,121,78,194,122,46,36,84,119,201,241,242,82,140,248,195,93,9,241,17,247,61,196,202,216,218,185,166,146,249,134,12,53,1,131,27,35,37,28,21,43,221,50,128,128,242,214,207,248,187,92,60,243,220,173,149,249,153,201,108,71,127,61,181,200,26,251,181,108,56,155,18,162,119,70,255,19,130,23,187,137,28,154,58,235,163,16,174,114,19,98,30,134,168,209,214,76,230,243,81,162,168,83,254,226,238,194,255,215,187,235,94,25,76,95,241,205,23,4,193,98,69]

    it "should convert <= 255 byte bytestrings to int" $ do
      C.byteStringToInt (BS.pack [0,4,234,66,25,181]) `shouldBe` (3930200501, BS.empty)

    it "should convert > 255 byte bytestrings to int" $ do
      C.byteStringToInt (BS.pack [1,0,173,45,97,41,162,87,64,67,167,161,160,56,95,3,170,70,97,8,202,198,164,171,66,17,113,15,8,67,254,13,44,250,246,121,107,172,64,50,163,225,39,47,108,37,119,237,120,234,40,193,118,234,35,70,216,57,120,47,126,177,54,219,157,103,89,243,26,72,27,237,175,88,20,62,18,22,41,205,63,116,118,190,248,230,199,69,6,162,85,168,218,177,56,64,210,243,51,36,141,27,7,208,19,108,62,57,7,79,255,136,3,42,9,84,130,77,101,83,125,164,208,57,139,159,206,88,185,76,93,139,247,0,12,167,238,121,78,194,122,46,36,84,119,201,241,242,82,140,248,195,93,9,241,17,247,61,196,202,216,218,185,166,146,249,134,12,53,1,131,27,35,37,28,21,43,221,50,128,128,242,214,207,248,187,92,60,243,220,173,149,249,153,201,108,71,127,61,181,200,26,251,181,108,56,155,18,162,119,70,255,19,130,23,187,137,28,154,58,235,163,16,174,114,19,98,30,134,168,209,214,76,230,243,81,162,168,83,254,226,238,194,255,215,187,235,94,25,76,95,241,205,23,4,193,98,69]) `shouldBe` (21861604245080171339007767436273251028962675737238600489562652570616452792171930243261538449270383829845213171438714534790402839949560242485827421338373225036542992214463891190748802611892723299134012757551872627490432599512695139570153104272243295483513740570680461640853477921139221080721470252809127558405874178316829038001976496050707242137419448698418190880376376357898762150901525314016508387807080297522276641333807090993741281833075321014369496188452228019592574472418790384827875190961329551033425345205568270076685303817873907426792398472173576937707798747379596999764222890564228862688418184435231463924293, BS.empty)

    it "should convert bytestring with bytes leftover" $ do
      let remaining = [1,2,3,4,5,6,7,8]
      C.byteStringToInt (BS.pack ([0,4,234,66,25,181] ++ remaining)) `shouldBe` (3930200501, BS.pack remaining)